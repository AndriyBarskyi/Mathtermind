""""add_profile_fields_to_user"

Revision ID: 6a3e50b37138
Revises: 94fd62f3388c
Create Date: 2025-05-23 16:16:13.338888

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
# from sqlalchemy.dialects import sqlite # Not needed if we are careful

# revision identifiers, used by Alembic.
revision: str = '6a3e50b37138'
down_revision: Union[str, None] = '94fd62f3388c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - PLEASE ADJUST! ###
    # Only keep operations for the 'users' table related to new columns.

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('first_name', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('last_name', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('avatar_url', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('profile_data', sa.JSON(), nullable=True))
        # IF alembic also tried to change users.id from NUMERIC to UUID, that change is removed here.
        # We assume users.id is already correctly a UUID-like string or handled by SQLAlchemy's UUID type.

    # All other batch_alter_table operations from the original autogenerated script are removed.
    # Example of removed op that caused issues:
    # op.drop_table('_alembic_tmp_achievements')
    # with op.batch_alter_table('achievements', schema=None) as batch_op:
    #     batch_op.alter_column('id',
    #            existing_type=sa.NUMERIC(),
    #            type_=sa.UUID(),
    #            existing_nullable=False)
    # ... and many more ...

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - PLEASE ADJUST! ###
    # Only keep operations for the 'users' table related to new columns.

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_column('profile_data')
        batch_op.drop_column('avatar_url')
        batch_op.drop_column('last_name')
        batch_op.drop_column('first_name')
        # If users.id was altered in upgrade, it should be reversed here.
        # Since we removed that potential alteration, nothing to do for 'id' here.

    # All other batch_alter_table operations from the original autogenerated script are removed.
    # ### end Alembic commands ###
