"""Remove course_metadata and add individual fields

Revision ID: 25108061be61
Revises: f7fd44497f51
Create Date: 2025-03-16 10:15:11.159523

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = '25108061be61'
down_revision: Union[str, None] = 'f7fd44497f51'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('achievements',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('icon', sa.String(length=255), nullable=False),
    sa.Column('category', sa.Enum('Learning', 'Engagement', 'Mastery', 'Challenge', name='achievement_category_enum'), nullable=False),
    sa.Column('criteria', sa.JSON(), nullable=False),
    sa.Column('points', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_achievement_category', 'achievements', ['category'], unique=False)
    op.create_index('idx_achievement_is_active', 'achievements', ['is_active'], unique=False)
    op.create_table('learning_tools',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('tool_category', sa.Enum('Math', 'Informatics', 'General', name='tool_category_enum'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('tool_type', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_learning_tool_tool_category', 'learning_tools', ['tool_category'], unique=False)
    op.create_index('idx_learning_tool_tool_type', 'learning_tools', ['tool_type'], unique=False)
    op.create_table('tags',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('category', sa.Enum('TOPIC', 'SKILL', 'DIFFICULTY', 'AGE', 'OTHER', name='category'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index('idx_tag_category', 'tags', ['category'], unique=False)
    op.create_index('idx_tag_name', 'tags', ['name'], unique=False)
    op.create_table('course_tags',
    sa.Column('course_id', sa.UUID(), nullable=False),
    sa.Column('tag_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('course_id', 'tag_id')
    )
    op.create_index('idx_course_tag_course_id', 'course_tags', ['course_id'], unique=False)
    op.create_index('idx_course_tag_tag_id', 'course_tags', ['tag_id'], unique=False)
    op.create_table('informatics_tools',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('informatics_tool_type', sa.Enum('CODE_EDITOR', 'ALGORITHM_VISUALIZER', 'DATA_STRUCTURE_VISUALIZER', 'LOGIC_CIRCUIT', 'DATABASE_DESIGNER', 'NETWORK_SIMULATOR', name='informaticstooltype'), nullable=False),
    sa.Column('capabilities', sa.JSON(), nullable=False),
    sa.Column('default_config', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['learning_tools.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('learning_goals',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('goal_type', sa.Enum('Daily', 'Weekly', 'Course', 'Topic', name='goal_type_enum'), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('target', sa.Integer(), nullable=False),
    sa.Column('target_unit', sa.Enum('Minutes', 'Points', 'Lessons', 'Exercises', name='target_unit_enum'), nullable=False),
    sa.Column('current_progress', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.TIMESTAMP(), nullable=False),
    sa.Column('end_date', sa.TIMESTAMP(), nullable=True),
    sa.Column('is_completed', sa.Boolean(), nullable=False),
    sa.Column('is_recurring', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_learning_goal_goal_type', 'learning_goals', ['goal_type'], unique=False)
    op.create_index('idx_learning_goal_is_completed', 'learning_goals', ['is_completed'], unique=False)
    op.create_index('idx_learning_goal_user_id', 'learning_goals', ['user_id'], unique=False)
    op.create_table('learning_sessions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('start_time', sa.TIMESTAMP(), nullable=False),
    sa.Column('end_time', sa.TIMESTAMP(), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('session_data', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_learning_session_start_time', 'learning_sessions', ['start_time'], unique=False)
    op.create_index('idx_learning_session_user_id', 'learning_sessions', ['user_id'], unique=False)
    op.create_table('math_tools',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('math_tool_type', sa.Enum('CALCULATOR', 'GRAPHING', 'GEOMETRY', 'EQUATION_SOLVER', 'STATISTICS', 'PROBABILITY', 'MATRIX', name='mathtooltype'), nullable=False),
    sa.Column('capabilities', sa.JSON(), nullable=False),
    sa.Column('default_config', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['learning_tools.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notifications',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('type', sa.Enum('Achievement', 'Comment', 'Course', 'Reminder', 'System', name='notification_type_enum'), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.Column('related_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_notification_created_at', 'notifications', ['created_at'], unique=False)
    op.create_index('idx_notification_is_read', 'notifications', ['is_read'], unique=False)
    op.create_index('idx_notification_type', 'notifications', ['type'], unique=False)
    op.create_index('idx_notification_user_id', 'notifications', ['user_id'], unique=False)
    op.create_table('personal_bests',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('metric_type', sa.Enum('SCORE', 'TIME', 'STREAK', 'ACCURACY', 'PROBLEMS_SOLVED', 'CONSECUTIVE_CORRECT', name='metrictype'), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('context_id', sa.UUID(), nullable=True),
    sa.Column('context_type', sa.String(length=50), nullable=True),
    sa.Column('achieved_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('previous_best', sa.Float(), nullable=True),
    sa.Column('improvement', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_personal_best_context_id', 'personal_bests', ['context_id'], unique=False)
    op.create_index('idx_personal_best_metric_type', 'personal_bests', ['metric_type'], unique=False)
    op.create_index('idx_personal_best_user_id', 'personal_bests', ['user_id'], unique=False)
    op.create_table('study_streaks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('current_streak', sa.Integer(), nullable=False),
    sa.Column('longest_streak', sa.Integer(), nullable=False),
    sa.Column('last_study_date', sa.TIMESTAMP(), nullable=False),
    sa.Column('streak_data', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_study_streak_current_streak', 'study_streaks', ['current_streak'], unique=False)
    op.create_index('idx_study_streak_last_study_date', 'study_streaks', ['last_study_date'], unique=False)
    op.create_index('idx_study_streak_user_id', 'study_streaks', ['user_id'], unique=False)
    op.create_table('user_achievements',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('achievement_id', sa.UUID(), nullable=False),
    sa.Column('achieved_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('notification_sent', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['achievement_id'], ['achievements.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_user_achievement_achievement_id', 'user_achievements', ['achievement_id'], unique=False)
    op.create_index('idx_user_achievement_notification_sent', 'user_achievements', ['notification_sent'], unique=False)
    op.create_index('idx_user_achievement_user_id', 'user_achievements', ['user_id'], unique=False)
    op.create_table('completed_lessons',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('lesson_id', sa.UUID(), nullable=False),
    sa.Column('completed_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('time_spent', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_completed_lesson_completed_at', 'completed_lessons', ['completed_at'], unique=False)
    op.create_index('idx_completed_lesson_lesson_id', 'completed_lessons', ['lesson_id'], unique=False)
    op.create_index('idx_completed_lesson_user_id', 'completed_lessons', ['user_id'], unique=False)
    op.create_table('content',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('lesson_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('content_type', sa.Enum('theory', 'exercise', 'assessment', 'interactive', name='content_type_enum'), nullable=False),
    sa.Column('status', sa.Enum('Draft', 'Published', 'Archived', name='content_status_enum'), nullable=False),
    sa.Column('content_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_content_lesson_id', 'content', ['lesson_id'], unique=False)
    op.create_index('idx_content_status', 'content', ['status'], unique=False)
    op.create_index('idx_content_type', 'content', ['content_type'], unique=False)
    op.create_table('error_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('lesson_id', sa.UUID(), nullable=True),
    sa.Column('error_data', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_error_log_created_at', 'error_logs', ['created_at'], unique=False)
    op.create_index('idx_error_log_lesson_id', 'error_logs', ['lesson_id'], unique=False)
    op.create_index('idx_error_log_user_id', 'error_logs', ['user_id'], unique=False)
    op.create_table('resources',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('type', sa.Enum('VIDEO', 'TEXT', 'IMAGE', 'AUDIO', 'LINK', name='resourcetype'), nullable=False),
    sa.Column('url', sa.String(length=1024), nullable=False),
    sa.Column('lesson_id', sa.UUID(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_resource_created_by', 'resources', ['created_by'], unique=False)
    op.create_index('idx_resource_lesson_id', 'resources', ['lesson_id'], unique=False)
    op.create_index('idx_resource_type', 'resources', ['type'], unique=False)
    op.create_table('assessment_content',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('questions', sa.JSON(), nullable=False),
    sa.Column('time_limit', sa.Integer(), nullable=True),
    sa.Column('passing_score', sa.Float(), nullable=False),
    sa.Column('attempts_allowed', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['content.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('exercise_content',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('problems', sa.JSON(), nullable=False),
    sa.Column('difficulty_level', sa.Integer(), nullable=False),
    sa.Column('estimated_time', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['content.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('interactive_content',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('interactive_type', sa.Enum('simulation', 'tool', 'game', 'visualization', name='interactive_type_enum'), nullable=False),
    sa.Column('configuration', sa.JSON(), nullable=False),
    sa.Column('instructions', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['content.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('theory_content',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('text_content', sa.Text(), nullable=False),
    sa.Column('examples', sa.JSON(), nullable=True),
    sa.Column('references', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['content.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_content_progress',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('content_id', sa.UUID(), nullable=False),
    sa.Column('is_completed', sa.Boolean(), nullable=False),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('attempts', sa.Integer(), nullable=False),
    sa.Column('time_spent', sa.Integer(), nullable=False),
    sa.Column('last_interaction', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['content_id'], ['content.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_user_content_progress_content_id', 'user_content_progress', ['content_id'], unique=False)
    op.create_index('idx_user_content_progress_is_completed', 'user_content_progress', ['is_completed'], unique=False)
    op.create_index('idx_user_content_progress_user_id', 'user_content_progress', ['user_id'], unique=False)
    op.create_table('user_tool_usages',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('tool_id', sa.UUID(), nullable=False),
    sa.Column('content_id', sa.UUID(), nullable=True),
    sa.Column('start_time', sa.TIMESTAMP(), nullable=False),
    sa.Column('end_time', sa.TIMESTAMP(), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('usage_data', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['content_id'], ['content.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['tool_id'], ['learning_tools.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_user_tool_usage_content_id', 'user_tool_usages', ['content_id'], unique=False)
    op.create_index('idx_user_tool_usage_tool_id', 'user_tool_usages', ['tool_id'], unique=False)
    op.create_index('idx_user_tool_usage_user_id', 'user_tool_usages', ['user_id'], unique=False)
    op.drop_table('user_answers')
    op.drop_table('quizzes')
    op.alter_column('courses', 'id',
               existing_type=sa.TEXT(),
               type_=sa.UUID(),
               nullable=False)
    op.alter_column('courses', 'created_at',
               existing_type=sa.TIMESTAMP(),
               nullable=False)
    op.drop_column('courses', 'updated_at')
    op.add_column('lessons', sa.Column('difficulty_level', sa.Enum('BEGINNER', 'INTERMEDIATE', 'ADVANCED', name='difficultylevel'), nullable=False))
    op.add_column('lessons', sa.Column('estimated_time', sa.Integer(), nullable=False))
    op.add_column('lessons', sa.Column('points_reward', sa.Integer(), nullable=False))
    op.add_column('lessons', sa.Column('updated_at', sa.TIMESTAMP(), nullable=False))
    op.alter_column('lessons', 'id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('lessons', 'course_id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('lessons', 'lesson_type',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.Enum('THEORY', 'EXERCISE', 'ASSESSMENT', 'INTERACTIVE', name='lessontype'),
               existing_nullable=False)
    op.alter_column('lessons', 'created_at',
               existing_type=sa.TIMESTAMP(),
               nullable=False)
    op.create_index('idx_lesson_course_id', 'lessons', ['course_id'], unique=False)
    op.create_index('idx_lesson_difficulty_level', 'lessons', ['difficulty_level'], unique=False)
    op.create_index('idx_lesson_lesson_type', 'lessons', ['lesson_type'], unique=False)
    op.drop_column('lessons', 'content')
    op.add_column('progress', sa.Column('current_lesson_id', sa.UUID(), nullable=True))
    op.add_column('progress', sa.Column('current_difficulty', sa.Enum('Beginner', 'Intermediate', 'Advanced', name='progress_difficulty_enum'), nullable=False))
    op.add_column('progress', sa.Column('progress_percentage', sa.Float(), nullable=False))
    op.add_column('progress', sa.Column('total_points_earned', sa.Integer(), nullable=False))
    op.add_column('progress', sa.Column('time_spent', sa.Integer(), nullable=False))
    op.alter_column('progress', 'id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('progress', 'user_id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('progress', 'course_id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('progress', 'last_accessed',
               existing_type=sa.TIMESTAMP(),
               nullable=False)
    op.create_foreign_key(None, 'progress', 'lessons', ['current_lesson_id'], ['id'], ondelete='CASCADE')
    op.alter_column('settings', 'id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('settings', 'user_id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.create_index('idx_setting_user_id', 'settings', ['user_id'], unique=False)
    op.add_column('users', sa.Column('age_group', sa.Enum('TEN_TO_TWELVE', 'THIRTEEN_TO_FOURTEEN', 'FIFTEEN_TO_SEVENTEEN', name='agegroup'), nullable=False))
    op.add_column('users', sa.Column('points', sa.Integer(), nullable=False))
    op.add_column('users', sa.Column('experience_level', sa.Integer(), nullable=False))
    op.add_column('users', sa.Column('total_study_time', sa.Integer(), nullable=False))
    op.alter_column('users', 'id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('users', 'created_at',
               existing_type=sa.TIMESTAMP(),
               nullable=False)
    op.alter_column('users', 'updated_at',
               existing_type=sa.TIMESTAMP(),
               nullable=False)
    op.create_index('idx_user_email', 'users', ['email'], unique=False)
    op.create_index('idx_user_username', 'users', ['username'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_user_username', table_name='users')
    op.drop_index('idx_user_email', table_name='users')
    op.alter_column('users', 'updated_at',
               existing_type=sa.TIMESTAMP(),
               nullable=True)
    op.alter_column('users', 'created_at',
               existing_type=sa.TIMESTAMP(),
               nullable=True)
    op.alter_column('users', 'id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)
    op.drop_column('users', 'total_study_time')
    op.drop_column('users', 'experience_level')
    op.drop_column('users', 'points')
    op.drop_column('users', 'age_group')
    op.drop_index('idx_setting_user_id', table_name='settings')
    op.alter_column('settings', 'user_id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)
    op.alter_column('settings', 'id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)
    op.drop_constraint(None, 'progress', type_='foreignkey')
    op.alter_column('progress', 'last_accessed',
               existing_type=sa.TIMESTAMP(),
               nullable=True)
    op.alter_column('progress', 'course_id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)
    op.alter_column('progress', 'user_id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)
    op.alter_column('progress', 'id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)
    op.drop_column('progress', 'time_spent')
    op.drop_column('progress', 'total_points_earned')
    op.drop_column('progress', 'progress_percentage')
    op.drop_column('progress', 'current_difficulty')
    op.drop_column('progress', 'current_lesson_id')
    op.add_column('lessons', sa.Column('content', sqlite.JSON(), nullable=False))
    op.drop_index('idx_lesson_lesson_type', table_name='lessons')
    op.drop_index('idx_lesson_difficulty_level', table_name='lessons')
    op.drop_index('idx_lesson_course_id', table_name='lessons')
    op.alter_column('lessons', 'created_at',
               existing_type=sa.TIMESTAMP(),
               nullable=True)
    op.alter_column('lessons', 'lesson_type',
               existing_type=sa.Enum('THEORY', 'EXERCISE', 'ASSESSMENT', 'INTERACTIVE', name='lessontype'),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    op.alter_column('lessons', 'course_id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)
    op.alter_column('lessons', 'id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)
    op.drop_column('lessons', 'updated_at')
    op.drop_column('lessons', 'points_reward')
    op.drop_column('lessons', 'estimated_time')
    op.drop_column('lessons', 'difficulty_level')
    op.add_column('courses', sa.Column('updated_at', sa.TIMESTAMP(), nullable=True))
    op.alter_column('courses', 'created_at',
               existing_type=sa.TIMESTAMP(),
               nullable=True)
    op.alter_column('courses', 'id',
               existing_type=sa.UUID(),
               type_=sa.TEXT(),
               nullable=True)
    op.create_table('quizzes',
    sa.Column('id', sa.NUMERIC(), nullable=False),
    sa.Column('lesson_id', sa.NUMERIC(), nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), nullable=False),
    sa.Column('questions', sqlite.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_answers',
    sa.Column('id', sa.NUMERIC(), nullable=False),
    sa.Column('user_id', sa.NUMERIC(), nullable=False),
    sa.Column('quiz_id', sa.NUMERIC(), nullable=False),
    sa.Column('answers', sqlite.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['quiz_id'], ['quizzes.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_index('idx_user_tool_usage_user_id', table_name='user_tool_usages')
    op.drop_index('idx_user_tool_usage_tool_id', table_name='user_tool_usages')
    op.drop_index('idx_user_tool_usage_content_id', table_name='user_tool_usages')
    op.drop_table('user_tool_usages')
    op.drop_index('idx_user_content_progress_user_id', table_name='user_content_progress')
    op.drop_index('idx_user_content_progress_is_completed', table_name='user_content_progress')
    op.drop_index('idx_user_content_progress_content_id', table_name='user_content_progress')
    op.drop_table('user_content_progress')
    op.drop_table('theory_content')
    op.drop_table('interactive_content')
    op.drop_table('exercise_content')
    op.drop_table('assessment_content')
    op.drop_index('idx_resource_type', table_name='resources')
    op.drop_index('idx_resource_lesson_id', table_name='resources')
    op.drop_index('idx_resource_created_by', table_name='resources')
    op.drop_table('resources')
    op.drop_index('idx_error_log_user_id', table_name='error_logs')
    op.drop_index('idx_error_log_lesson_id', table_name='error_logs')
    op.drop_index('idx_error_log_created_at', table_name='error_logs')
    op.drop_table('error_logs')
    op.drop_index('idx_content_type', table_name='content')
    op.drop_index('idx_content_status', table_name='content')
    op.drop_index('idx_content_lesson_id', table_name='content')
    op.drop_table('content')
    op.drop_index('idx_completed_lesson_user_id', table_name='completed_lessons')
    op.drop_index('idx_completed_lesson_lesson_id', table_name='completed_lessons')
    op.drop_index('idx_completed_lesson_completed_at', table_name='completed_lessons')
    op.drop_table('completed_lessons')
    op.drop_index('idx_user_achievement_user_id', table_name='user_achievements')
    op.drop_index('idx_user_achievement_notification_sent', table_name='user_achievements')
    op.drop_index('idx_user_achievement_achievement_id', table_name='user_achievements')
    op.drop_table('user_achievements')
    op.drop_index('idx_study_streak_user_id', table_name='study_streaks')
    op.drop_index('idx_study_streak_last_study_date', table_name='study_streaks')
    op.drop_index('idx_study_streak_current_streak', table_name='study_streaks')
    op.drop_table('study_streaks')
    op.drop_index('idx_personal_best_user_id', table_name='personal_bests')
    op.drop_index('idx_personal_best_metric_type', table_name='personal_bests')
    op.drop_index('idx_personal_best_context_id', table_name='personal_bests')
    op.drop_table('personal_bests')
    op.drop_index('idx_notification_user_id', table_name='notifications')
    op.drop_index('idx_notification_type', table_name='notifications')
    op.drop_index('idx_notification_is_read', table_name='notifications')
    op.drop_index('idx_notification_created_at', table_name='notifications')
    op.drop_table('notifications')
    op.drop_table('math_tools')
    op.drop_index('idx_learning_session_user_id', table_name='learning_sessions')
    op.drop_index('idx_learning_session_start_time', table_name='learning_sessions')
    op.drop_table('learning_sessions')
    op.drop_index('idx_learning_goal_user_id', table_name='learning_goals')
    op.drop_index('idx_learning_goal_is_completed', table_name='learning_goals')
    op.drop_index('idx_learning_goal_goal_type', table_name='learning_goals')
    op.drop_table('learning_goals')
    op.drop_table('informatics_tools')
    op.drop_index('idx_course_tag_tag_id', table_name='course_tags')
    op.drop_index('idx_course_tag_course_id', table_name='course_tags')
    op.drop_table('course_tags')
    op.drop_index('idx_tag_name', table_name='tags')
    op.drop_index('idx_tag_category', table_name='tags')
    op.drop_table('tags')
    op.drop_index('idx_learning_tool_tool_type', table_name='learning_tools')
    op.drop_index('idx_learning_tool_tool_category', table_name='learning_tools')
    op.drop_table('learning_tools')
    op.drop_index('idx_achievement_is_active', table_name='achievements')
    op.drop_index('idx_achievement_category', table_name='achievements')
    op.drop_table('achievements')
    # ### end Alembic commands ###
